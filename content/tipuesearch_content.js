var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': '課堂筆記', 'text': '將紀錄40723147 在CD2020當周課堂筆記 \n ---------------------------------------------------------------------------------------------------------------- \n w2 \n HTTP 與 HTTPS \n 字母 S 代表了網站使用編碼協定的安全性(secure) \n HTTP協定 不使用 加密協定‧ \n 反觀HTTPS協定，以 保密為前提 為研發‧ \n 是以加入SSL協定作為安全憑證， \n 因此網站透過協定上的加密機制後能夠防止資料竊取者 \n 就算攔截到了傳輸資訊卻也無法直接看到傳輸中的資料 \n \n HTTPS 是以安全為目的得 HTTP 通道， \n 經由網站傳輸協定進行通訊和利用 SSL/TLS 憑證來加密封包 \n 參考資料: https://www.webdesigns.com.tw/SSLANDHTTPS.asp \n \n SSL協定 \n SSL\xa0為\xa0 Secure Sockets Layer (安全通訊協定) \xa0的縮寫， \n 後來發展成 Transport Layer Security， \n 傳輸層安全協定 (TLS)；簡單說就是在通訊的過程中， \n 透過特定的演算法把傳遞內容加密， \n 防止內容被竊取或竄改。 \n 參考資料: 網址 \n 參考步驟: 網址 \n \n -------------------------- ------------------- ----------------- ------------------- ------------------------------- \n \n Dart \n 開放原始碼程式語言 ，由Google主導開發，於2011年10月公開。它的開發團隊由 \n Google Chrome瀏覽器V8引擎團隊的領導者拉爾斯·巴克主持，目標在於成為下一代 \n 結構化Web開發語言。 \n 類似JavaScript ， Dart也是一種物件導向語言 ，但是它採用類別為基的程式設計。它 \n 只允許單一繼承， 語法風格接近C語言 。 \n 參考資料: https://zh.wikipedia.org/zh-tw/Dart \n python \n 是一種 廣泛使用 的直譯式、進階程式、通用型程式語言，由吉多·范羅蘇姆創造，第 \n 一版釋出於1991年。可以視之為一種改良（加入一些其他程式語言的優點，如物件 \n 導向）的LISP。 Python的設計哲學強調代碼的可讀性和簡潔的語法 （尤其 \n 是使用空格縮排劃分代碼塊，而非使用大括號或者關鍵詞）。相比於C++或Java， \n Python讓開發者 能夠用更少的代碼表達想法 。不管是小型還是大型程式，該語言都 \n 試圖讓程式的結構清晰明瞭。 \n 參考資料: https://zh.wikipedia.org/zh-tw/Python \n ---------------------------------------------------------------------------------------------------------------- \n \n', 'tags': '', 'url': '課堂筆記.html'}, {'title': '亂數分組', 'text': "亂數分組 python程式 -甲班 \n import random\ngroupList=[['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155', '40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150', '40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146', '40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']]\n\ngroup=groupList[0]\n#將group數列隨機排列\nrandom.shuffle(group)\n#列印數列\nprint(group)\n#列印數列(1~12)\nprint(group[0:12])\n#列印數列(13~24)\nprint(group[12:24])\n#列印數列(25~36)\nprint(group[24:36])\n#列印數列(37~49)\nprint(group[36:49]) \n 使用python編寫亂數分組程式 \n [Python]-隨機random函數 \n \n import random \n 匯入\xa0 隨機random函數 \n \n \n groupList=[['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155', '40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150', '40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146', '40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']] \n \n 定義 groupList=所有修課學生 共49位 \n \n \n group=groupList[0] \n \n 設定變數group=groupList[0]\xa0 \n \n \n random.shuffle(group) \n \n 使用 random.shuffle 主要運用在將函數中的順序 打亂 \n \n \n 將函數( group)的順序打亂 \n \n \n #列印數列\nprint(group)\n#列印數列(1~12)\nprint(group[0:12])\n#列印數列(13~24)\nprint(group[12:24])\n#列印數列(25~36)\nprint(group[24:36])\n#列印數列(37~49)\nprint(group[36:49]) \n \n \n print 列印運用 \n 參考資料: https://nkust.gitbook.io/python/untitled \n \n 測試1 \n \n \n 標示 1 2 3 4 組", 'tags': '', 'url': '亂數分組.html'}]};